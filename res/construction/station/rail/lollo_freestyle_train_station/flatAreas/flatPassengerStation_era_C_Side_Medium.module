local _constants = require('lollo_freestyle_train_station.constants')
local constructionutil = require "constructionutil"
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
local modulesutil = require "modulesutil"
local slotHelpers = require('lollo_freestyle_train_station.slotHelpers')
local transfUtils = require('lollo_freestyle_train_station.transfUtils')


function data()
	local generatedData = {
		["main"] = {
			models = {
				["station/rail/era_c/station_2.mdl"] = {
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000 },
				},
			},
		},
		["assets"] = {
			models = {
				["asset/roof/era_b_lamp_b_02.mdl"] = {
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 1.25469, -5.20000, 4.39750, 1.00000 },
					{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 1.25469, -17.00001, 3.63750, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -6.25279, -5.20000, 4.39750, 1.00000 },
					{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -4.67500, -17.00001, 3.63750, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 6.25943, -5.20000, 4.39750, 1.00000 },
					{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 4.67500, -17.00001, 3.63750, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -1.25000, -5.20000, 4.39750, 1.00000 },
					{ -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -1.25000, -17.00001, 3.63750, 1.00000 },
				},
				["station/rail/asset/era_c_single_chair.mdl"] = {
					{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -6.24430, -4.60000, 0.80000, 1.00000 },
					{ -0.00000, -1.00000, 0.00000, 0.00000, 1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 6.24430, -4.60000, 0.80000, 1.00000 },
				},
--[[
				["station/rail/asset/era_c_street_pillar.mdl"] = {
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -10.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -8.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -6.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -4.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -2.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -3.00000, -17.30000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 2.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 3.00000, -17.30000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 4.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 6.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 8.00000, -22.51000, 0.00000, 1.00000 },
					{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 10.00000, -22.51000, 0.00000, 1.00000 },
				},
]]
				["station/rail/asset/era_c_trashcan.mdl"] = {
					{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 3.76910, -4.50000, 0.80000, 1.00000 },
					{ -0.00000, 1.00000, 0.00000, 0.00000, -1.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, -3.76910, -4.50000, 0.80000, 1.00000 },
				},
			},
		},
	}
	return {
		availability = {
			yearFrom = _constants.eras.era_c.startYear,
			yearTo = 0
		},
		category = {
			categories = { "passenger-road-access", "passenger-road-access-axial", },
		},
		cost = {
			price = 0,
		},
		description = {
			name = _("Medium side building"),
			description = _("Medium side building with street access for passenger stations. Provides capacity for 40 passengers."),
			icon = "ui/construction/station/rail/modular_station/side_building_2_era_c.tga",
		},
		metadata = {
			nEvenSegmentPairs = 1,
			widthOnOwnTerminalHead = 10,
			moreCapacity = {
				cargo = 0,
				passenger = 90
			},
			-- stationSquareShift_XYZ_rotZ = {
			-- 	x = 10.7, -- 13.2 2.5
			-- 	y = 0.0,
			-- 	z = -0.8,
			-- 	rotZ = 0.0
			-- }
		},
		order = {
			value = 43,
		},
		type = _constants.flatPassengerStation0MModuleType,
		updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
			local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
			if not nTerminal or not nTrackEdge or not baseId then return end

			local _terminalData = params.terminals[nTerminal]
			if baseId == _constants.idBases.axialStation0MSlotId then -- ad hoc
				local yShift = nTrackEdge == 1
					and (_terminalData.isTrackOnPlatformLeft and -5 or 5)
					or (_terminalData.isTrackOnPlatformLeft and 5 or -5)
				slotTransf = transfUtils.getTransf_YShifted(slotTransf, yShift)
			end

			local zAdjustedTransf = moduleHelpers.flatAreas.getMNZShiftedTransf(params, slotId, slotTransf)
			local buildingTransf = transfUtils.getTransf_ZRotated_Shifted(zAdjustedTransf, math.pi * 0.5, {-2.5, 0, -0.8})

			local eraPrefix = moduleHelpers.getEraPrefix2(params, nTerminal, _terminalData, nTrackEdge)

			local myGroundFacesFillKey = _constants[eraPrefix .. 'groundFacesFillKey']

			result.models[#result.models + 1] = {
				id = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/lollo_side.mdl',
				slotId = slotId,
				transf = buildingTransf,
				tag = tag
			}
			local perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/lollo_perron.mdl'
			if result.platformStyles[nTerminal] == _constants.passengersPlatformStyles.era_c_db_2_stripes.moduleFileName then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_2s_lollo_perron.mdl'
			elseif result.platformStyles[nTerminal] == _constants.passengersPlatformStyles.era_c_db_1_stripe.moduleFileName then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_1s_lollo_perron.mdl'
			elseif result.platformStyles[nTerminal] == _constants.passengersPlatformStyles.era_c_fs_1_stripe.moduleFileName then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_1s_lollo_perron.mdl'
			elseif result.platformStyles[nTerminal] == _constants.passengersPlatformStyles.era_c_uk_2_stripes.moduleFileName then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_1s_lollo_perron.mdl'
			elseif result.platformStyles[nTerminal] == _constants.passengersPlatformStyles.era_b_db.moduleFileName then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_1s_lollo_perron.mdl'
			elseif eraPrefix ~= _constants.eras.era_c.prefix then
				perronModelId = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/era_c_db_1s_lollo_perron.mdl'
			end
			result.models[#result.models + 1] = {
				id = perronModelId,
				slotId = slotId,
				transf = buildingTransf,
				tag = tag
			}

			if baseId == _constants.idBases.axialStation0MSlotId then
				moduleHelpers.axialAreas.addPassengerLaneToSelf(result, zAdjustedTransf, tag, slotId, params, nTerminal, _terminalData, nTrackEdge)
			else
				moduleHelpers.flatAreas.addPassengerLaneToSelf(result, zAdjustedTransf, tag, slotId, params, nTerminal, _terminalData, nTrackEdge)
			end

			result.models[#result.models + 1] = {
				id = 'lollo_freestyle_train_station/railroad/flatSides/passengers/passenger_waiting_area_station_9x8.mdl',
				slotId = slotId,
				transf = transfUtils.getTransf_Shifted(buildingTransf, {0, -4, _constants.stairsAndRampHeight + 0.8}),
				tag = slotHelpers.mangleModelTag(nTerminal, false),
			}
--[[
			if result.terminateConstructionHookInfo.underpassPositionsOnGround[nTerminal] == nil then
				result.terminateConstructionHookInfo.underpassPositionsOnGround[nTerminal] = {}
			end
			table.insert(
				result.terminateConstructionHookInfo.underpassPositionsOnGround[nTerminal],
				{
					t = nTerminal,
					lanePosTanX2 = cpl.posTanX2,
					pos2Link = transfUtils.transf2Position(
						transfUtils.getTransf_Shifted(
							buildingTransf,
							{9, -3.5, _constants.subwayPos2LinkZ}
						)
					)
				}
			)
]]
			if baseId ~= _constants.idBases.axialStation0MSlotId then
				table.insert(result.slots, {
					id = result.mangleId(nTerminal, nTrackEdge, _constants.idBases.passengerStationSquareOuterSlotId),
					shape = 1,
					spacing = {-1, 4, 4, 4},
					transf = transfUtils.getTransf_ZRotatedM90_Shifted(
						buildingTransf,
						{0, -20.7, 0}
					),
					type = _constants.passengerStationSquareModuleType,
				})
			end

			local groundFace = {
				{-1, -10.6, -0.8, 1},
				{-1, 10.6, -0.8, 1},
				{20.5, 10.6, -0.8, 1},
				{20.5, -10.6, -0.8, 1},
			}
			modulesutil.TransformFaces(zAdjustedTransf, groundFace)
			table.insert(
				result.groundFaces,
				{
					face = groundFace,
					modes = {
						{
							type = 'FILL',
							key = myGroundFacesFillKey
						},
						{
							type = 'STROKE_OUTER',
							key = myGroundFacesFillKey
						}
					}
				}
			)

			local terrainAlignmentList = {
				faces = { groundFace },
				optional = true,
				slopeHigh = _constants.slopeHigh,
				slopeLow = _constants.slopeLow,
				type = 'EQUAL',
			}
			result.terrainAlignmentLists[#result.terrainAlignmentLists + 1] = terrainAlignmentList

			-- constructionutil.addModels(generatedData["clock"], result.models, buildingTransf, tag)
			constructionutil.addModels(generatedData["assets"], result.models, buildingTransf, tag)
		end,

		getModelsFn = function(params)
			return {
				{
					id = 'lollo_freestyle_train_station/railroad/flatSides/passengers/era_c_medium/lollo_side.mdl',
					transf = { 0, 1, 0, 0,  -1, 0, 0, 0,  0, 0, 1, 0,  20, 20, 0, 1 },
				},
				moduleHelpers.flatAreas.getPreviewIcon(params),
			}
		end
	}
end
