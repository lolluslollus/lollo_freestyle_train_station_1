local constants = require('lollo_freestyle_train_station.constants')

function data()
    return {
        -- type = 'TRACK_CONSTRUCTION', -- this prevent snapping
        type = 'ASSET_DEFAULT', -- this allows snapping
        description = {
            name = _('AutoFenceMarkerPreciseName'),
            description = _('AutoFenceMarkerPreciseDesc')
        },
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        buildMode = 'SINGLE',
        categories = { 'stairs' },
        order = 102,
        autoRemovable = false,
        skipCollision = true,
        -- useless with type = 'TRACK_CONSTRUCTION'
        snapping = {
            rail = true,
            road = false,
            water = false,
        },
        updateFn = function(params)
            local result = {}
            result.colliders = {}
            result.cost = 0
            result.edgeLists = {}
            -- result.groundFaces = {}
            result.groundFaces = { -- dummy ground faces so this finds the nearest edge
                {
                    face = {
                        {0.1, -0.1, 0.0, 1.0},
                        {0.1, 0.1, 0.0, 1.0},
                        {-0.1, 0.1, 0.0, 1.0},
                        {-0.1, -0.1, 0.0, 1.0},
                    },
                    modes = {
                        {
                            type = 'FILL',
                            key = 'shared/asphalt_01.gtex.lua' --'shared/gravel_03.gtex.lua'
                        }
                    }
                },
            }
            result.models = {
                {
                    id = 'lollo_freestyle_train_station/railroad/auto_fence_marker_precise.mdl',
                    autoRemovable = true,
                    skipCollision = true,
                    transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, constants.splitterZShift, 1}
                }
            }
            -- LOLLO NOTE this thing with the empty faces is required , otherwise the game will make its own alignments, with spikes and all on bridges or tunnels.
            result.terrainAlignmentLists = { {
                type = 'EQUAL',
                optional = true,
                faces =  { }
            } }
            --		result.h0 = {}
            --		result.h1 = {}
            return result
        end,
        upgradeFn = function(_)
            return {}
        end
    }
end
